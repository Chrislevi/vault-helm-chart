{{- if .Values.Consul.Ui.Enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-{{.Values.Consul.Ui.ComponentName}}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: {{.Values.Consul.Ui.ComponentName}}
    app: {{ template "name" . }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        component: {{.Values.Consul.Ui.ComponentName}}
        app: {{ template "name" . }}
    spec:
      containers:
      - name: {{ template "fullname" . }}-{{.Values.Consul.Ui.ComponentName}}
        image: "{{.Values.Consul.Image}}:{{.Values.Consul.ImageTag}}"
        imagePullPolicy: {{.Values.Consul.ImagePullPolicy}}
        command:
          - "/bin/sh"
          - "-ec"
          - |
            IP=$(hostname -i)

            if [ -e /etc/consul/secrets/gossip-key ]; then
              echo "{\"encrypt\": \"$(cat /etc/consul/secrets/gossip-key)\"}" > /etc/consul/encrypt.json
              GOSSIP_KEY="-config-file /etc/consul/encrypt.json"
            fi

            for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                while true; do
                    echo "Waiting for ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME} to come up"
                    ping -W 1 -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc.cluster.local > /dev/null && break
                    sleep 1s
                done
            done

            PEERS=""
            for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
                PEERS="${PEERS}${PEERS:+ } -retry-join $(ping -c 1 ${STATEFULSET_NAME}-${i}.${STATEFULSET_NAME}.${STATEFULSET_NAMESPACE}.svc.cluster.local | awk -F'[()]' '/PING/{print $2}')"
            done

            docker-entrypoint.sh \
              consul \
              agent \
              -config-dir /etc/consul/config \
              ${PEERS} \
              ${GOSSIP_KEY}
        env:
          - name: INITIAL_CLUSTER_SIZE
            value: {{ .Values.Consul.Replicas | quote }}
          - name: DATACENTER
            value: {{ .Values.Consul.Datacenter | quote }}
          - name: STATEFULSET_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: STATEFULSET_NAME
            value: {{ template "fullname" . }}-{{.Values.Consul.ComponentName}}
        ports:
          - name: http
            containerPort: {{.Values.Consul.HttpPort}}
        volumeMounts:
        - name: config
          mountPath: /etc/consul/config
          readOnly: true
        - name: gossip-key
          mountPath: /etc/consul/secrets
          readOnly: true
        - name: tls
          mountPath: /etc/consul/tls
          readOnly: true
        - name: ca
          mountPath: /etc/consul/ca
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ template "fullname" . }}-{{.Values.Consul.Ui.ComponentName}}
          items:
          - key: config.json
            path: config.json
      - name: gossip-key
        secret:
          secretName: {{ template "fullname" . }}-consul-gossip-key
      - name: tls
        secret:
          secretName: {{ template "fullname" . }}-consul.tls
      - name: ca
        secret:
          secretName: {{ template "fullname" . }}-consul.ca
{{- end }}
